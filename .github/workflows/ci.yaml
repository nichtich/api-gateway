name: Continuous Integration
 
on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]
env:
  KUBECONFIG: .kube/config
  KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
jobs:
  build:
    name: "Build Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - id: generate-image-tag
        name: Generate Image Tag
        env:
          ref_name: "${{ github.ref_name }}"
          head_ref: "${{ github.head_ref }}"
        run: |
          head_ref="${head_ref/\//-}"
          ref_name="${head_ref:-${ref_name/main/latest}}"
          echo "::set-output name=imageTag::${ref_name#v}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin' 
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.generate-image-tag.outputs.imageTag }}
            ghcr.io/${{ github.repository }}:${{ github.event.pull_request.head.sha || github.sha }}
  deploy_main:
      needs: build
      if: github.ref == 'refs/heads/main'
      runs-on: ubuntu-latest
      steps:
      - id: generate-image-tag
        name: Generate Image Tag
        env:
          ref_name: "${{ github.ref_name }}"
          head_ref: "${{ github.head_ref }}"
        run: |
          head_ref="${head_ref/\//-}"
          ref_name="${head_ref:-${ref_name/main/latest}}"
          echo "::set-output name=imageTag::${ref_name#v}"
      - uses: actions/checkout@v2
      - run: |
          mkdir -p .kube
          echo "${{ env.KUBECONFIG_FILE }}" > $KUBECONFIG
      - uses: stefanprodan/kube-tools@v1
        with:
          helmv3: 3.12.0
          command: |
            kubectl get nodes
            helmv3 repo add api-gateway-deployment https://ts4nfdi.github.io/api-gateway-deployment/
            helmv3 repo update
            helmv3 upgrade ts4nfdi \
            --install \
            api-gateway-deployment/api-gateway